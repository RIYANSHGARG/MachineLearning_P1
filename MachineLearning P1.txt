import pandas as pd
import numpy as np

from sklearn.datasets import load_iris
iris_dataset = load_iris()

print("Keys of iris_dataset : \n{}".format(iris_dataset.keys()))
print(iris_dataset['DESCR'][:193]+"\n...")
print("Target names : {} ".format(iris_dataset['target_names']))
print("Feature names : {} ".format(iris_dataset['feature_names']))
print("Types of data : \n{}".format(type(iris_dataset['data'])))
print("shape of data : {}".format(iris_dataset['data'].shape))
print("First five elements of data :\n{}".format(iris_dataset['data'][:5]))
print("Type if target : {}".format (type(iris_dataset['target'])))
print("shape of target : {}".format(iris_dataset['target'].shape))
print("Target : \n{}".format(iris_dataset['target']))

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(
    iris_dataset['data'],iris_dataset['target'],random_state=0)


print("X_train shape : {}".format(X_train.shape))
print("Y_train shape : {}".format(y_train.shape))
print("X_test shape : {}".format(X_test.shape))
print("X_test shape : {}".format(y_test.shape))


from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=1)

knn.fit(X_train,y_train)
KNeighborsClassifier(algorithm='auto',leaf_size=30, metric_params=None,
                      n_jobs=None,n_neighbors=1,p=2,weights='uniform')


X_new = np.array([[5,2.9,1,0.2]])
print("X_new.shape: {}".format(X_new.shape))


prediction = knn.predict(X_new)

print("prediction : {}".format(prediction))
print("predicted target name : {}".format(
    iris_dataset['target_names'][prediction]))


y_pred = knn.predict(X_test)
print("test set prediction : \n{}".format(y_pred))

print("Test set score : {}".format(np.mean(y_pred==y_test)))